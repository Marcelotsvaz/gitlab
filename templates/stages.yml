spec:
    inputs:
        deployOn:
            description: Control if deployment jobs should run for tag pipelines or for default branch pipelines.
            options:
              - defaultBranch
              - tag
              - none
            default: none

---

stages:
  - !reference [ .preBuildStage,       stage ]
  - !reference [ .buildStage,          stage ]
  - !reference [ .testStage,           stage ]
  - !reference [ .stagingPrepareStage, stage ]
  - !reference [ .stagingDeployStage,  stage ]
  - !reference [ .stagingTestStage,    stage ]
  - !reference [ .stagingCleanupStage, stage ]
  - !reference [ .prepareStage,        stage ]
  - !reference [ .deployStage,         stage ]
  - !reference [ .releaseStage,        stage ]


variables:
    CI_DEPLOY_ON: $[[ inputs.deployOn ]]



# 
# Templates.
#-------------------------------------------------------------------------------
.baseStage:
    script:
      - echo "Running job '${CI_JOB_NAME}' with an empty script."


.rules:
    deployToStaging:
      - if: $CI_PIPELINE_TYPE == 'merge_request'
            
      - if: $CI_PIPELINE_TYPE == 'branch' &&
            $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH &&
            $CI_DEPLOY_ON == 'defaultBranch'
            
      - if: $CI_PIPELINE_TYPE == 'tag' &&
            $CI_DEPLOY_ON == 'tag'
    
    deployToProduction:
      - if: $CI_PIPELINE_TYPE == 'branch' &&
            $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH &&
            $CI_DEPLOY_ON == 'defaultBranch'
            
      - if: $CI_PIPELINE_TYPE == 'tag' &&
            $CI_DEPLOY_ON == 'tag'



# 
# Stages.
#-------------------------------------------------------------------------------
.preBuildStage:
    stage: 🛠️ Pre-Build
    
    extends: .baseStage
    
    interruptible: true


.buildStage:
    stage: 🏗️ Build
    
    extends: .baseStage
    
    interruptible: true


.testStage:
    stage: 🧪 Test
    
    extends: .baseStage
    
    interruptible: true


.stagingPrepareStage:
    stage: 🚧 📋 Prepare (Staging)
    
    extends: .baseStage
    
    rules:
      - !reference [ .rules, deployToStaging ]


.stagingDeployStage:
    stage: 🚧 🚀 Deploy (Staging)
    
    extends: .baseStage
    
    rules:
      - !reference [ .rules, deployToStaging ]


.stagingTestStage:
    stage: 🚧 🧪 Test (Staging)
    
    extends: .baseStage
    
    rules:
      - !reference [ .rules, deployToStaging ]


.stagingCleanupStage:
    stage: 🚧 🗑️ Clean Up (Staging)
    
    extends: .baseStage
    
    rules:
      - !reference [ .rules, deployToStaging ]


.prepareStage:
    stage: 📋 Prepare
    
    extends: .baseStage
    
    rules:
      - !reference [ .rules, deployToProduction ]


.deployStage:
    stage: 🚀 Deploy
    
    extends: .baseStage
    
    rules:
      - !reference [ .rules, deployToProduction ]


.releaseStage:
    stage: 📦 Release
    
    extends: .baseStage
    
    rules:
      - !reference [ .rules, deployToProduction ]